{
  "address": "2xBPdkCzfwFdc6khqbvaAvYxWcKMRaueXeVyaLRoWDrN",
  "metadata": {
    "name": "tornado_mixer",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Tornado Cash style mixer on Solana using Light Protocol"
  },
  "instructions": [
    {
      "name": "deposit",
      "discriminator": [
        242,
        35,
        198,
        137,
        82,
        225,
        242,
        182
      ],
      "accounts": [
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "config"
        },
        {
          "name": "merkle_tree",
          "docs": [
            "before modifying tree bytes. We only use it to read header and append a leaf."
          ],
          "writable": true
        },
        {
          "name": "vault",
          "docs": [
            "It also serves as authority for the tree and signs via seeds in handlers."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "commitment",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "initialize",
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "vault",
          "docs": [
            "it only holds lamports and signs via seeds in handlers."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              }
            ]
          }
        },
        {
          "name": "merkle_tree",
          "docs": [
            "Size and header are validated in the handler before use; we only write the header",
            "and tree bytes via SPL account-compression wrappers."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  101,
                  101
                ]
              }
            ]
          }
        },
        {
          "name": "config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "max_depth",
          "type": "u32"
        },
        {
          "name": "max_buffer_size",
          "type": "u32"
        }
      ]
    },
    {
      "name": "withdraw",
      "discriminator": [
        183,
        18,
        70,
        156,
        148,
        109,
        161,
        34
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "config"
        },
        {
          "name": "merkle_tree",
          "docs": [
            "We validate proof against a root and rely on nullifier PDA for uniqueness."
          ]
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              }
            ]
          }
        },
        {
          "name": "nullifier",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  110,
                  117,
                  108,
                  108,
                  105,
                  102,
                  105,
                  101,
                  114
                ]
              },
              {
                "kind": "arg",
                "path": "nullifier_hash"
              }
            ]
          }
        },
        {
          "name": "recipient",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "proof",
          "type": {
            "array": [
              "u8",
              256
            ]
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nullifier_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "_recipient",
          "type": "pubkey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "MixerConfig",
      "discriminator": [
        249,
        68,
        151,
        145,
        180,
        148,
        212,
        172
      ]
    },
    {
      "name": "NullifierState",
      "discriminator": [
        234,
        94,
        162,
        253,
        0,
        12,
        107,
        4
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidProof",
      "msg": "Invalid zero-knowledge proof provided."
    },
    {
      "code": 6001,
      "name": "NullifierAlreadyUsed",
      "msg": "Nullifier has already been used (note already spent)."
    },
    {
      "code": 6002,
      "name": "InsufficientBalance",
      "msg": "Insufficient balance for deposit."
    },
    {
      "code": 6003,
      "name": "InsufficientPoolFunds",
      "msg": "Insufficient funds in mixer pool."
    }
  ],
  "types": [
    {
      "name": "MixerConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "merkle_tree",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "NullifierState",
      "type": {
        "kind": "struct",
        "fields": []
      }
    }
  ]
}